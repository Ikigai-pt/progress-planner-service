type Task {
  id: String
  title: String!
  description: String
  status: String
  category: Category
  tags: [Tag]
  goal: Goal,
  priority: String,
  daysOfWeek: Frequency
  startDate: Date!
  endDate: Date!
  createdAt: Date!
  modifiedAt: Date!
}

type Query {
  allTasks: [Task]
  taskById(id: String!): Task
}

input CreateTaskInput {
  title: String!
  description: String
  categoryId: String!
  tags: [String!]
  priority: String
  goalId: String!
  daysOfWeekId: String!
  startDate: Date!
  endDate: Date!
}

input UpdateTaskInput {
  id: String!
  title: String
  description: String
  categoryId: String!
  priority: String
  tags: [String!]
  type: String
  goal: String!
  daysOfWeek: String!
  startDate: Date
  endDate: Date
}

input UpdateTaskPrioirtyInput {
  id: String!
  priority: String!
}

input UpdateTaskStatusInput {
  id: String!
  status: String!
}

type Mutation {
  createTask(task: CreateTaskInput!): Task
 # updateTaskStatus(task: UpdateTaskStatusInput!): Task
 # updateTaskPriority(task: UpdateTaskPrioirtyInput!): Task
 # updateTask(task: UpdateTaskInput): Task
}


